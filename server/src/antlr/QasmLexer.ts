// Generated from src/antlr/Qasm.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class QasmLexer extends Lexer {
	public static readonly Comment=1;
	public static readonly WhiteSpace=2;
	public static readonly Real=3;
	public static readonly Int=4;
	public static readonly IbmQasm=5;
	public static readonly Include=6;
	public static readonly Qelib=7;
	public static readonly Qreg=8;
	public static readonly Creg=9;
	public static readonly Clean=10;
	public static readonly U=11;
	public static readonly Cx=12;
	public static readonly Measure=13;
	public static readonly Barrier=14;
	public static readonly Reset=15;
	public static readonly Opaque=16;
	public static readonly Assign=17;
	public static readonly Semi=18;
	public static readonly Comma=19;
	public static readonly LeftCurlyBrace=20;
	public static readonly RightCurlyBrace=21;
	public static readonly LeftBrace=22;
	public static readonly RightBrace=23;
	public static readonly LeftParen=24;
	public static readonly RightParen=25;
	public static readonly Pow=26;
	public static readonly Mult=27;
	public static readonly Div=28;
	public static readonly Sum=29;
	public static readonly Subs=30;
	public static readonly Pi=31;
	public static readonly Gate=32;
	public static readonly Id=33;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"Comment", "WhiteSpace", "Real", "Int", "IbmQasm", "Include", "Qelib", 
		"Qreg", "Creg", "Clean", "U", "Cx", "Measure", "Barrier", "Reset", "Opaque", 
		"Assign", "Semi", "Comma", "LeftCurlyBrace", "RightCurlyBrace", "LeftBrace", 
		"RightBrace", "LeftParen", "RightParen", "Pow", "Mult", "Div", "Sum", 
		"Subs", "Pi", "Gate", "Id"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, undefined, "'include'", 
		"'QELIB.INC'", "'qreg'", "'creg'", "'clean'", "'U'", "'CX'", "'measure'", 
		"'barrier'", "'reset'", "'opaque'", "'->'", "';'", "','", "'{'", "'}'", 
		"'['", "']'", "'('", "')'", "'^'", "'*'", "'/'", "'+'", "'-'", "'pi'", 
		"'gate'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, "Comment", "WhiteSpace", "Real", "Int", "IbmQasm", "Include", 
		"Qelib", "Qreg", "Creg", "Clean", "U", "Cx", "Measure", "Barrier", "Reset", 
		"Opaque", "Assign", "Semi", "Comma", "LeftCurlyBrace", "RightCurlyBrace", 
		"LeftBrace", "RightBrace", "LeftParen", "RightParen", "Pow", "Mult", "Div", 
		"Sum", "Subs", "Pi", "Gate", "Id"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(QasmLexer._LITERAL_NAMES, QasmLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return QasmLexer.VOCABULARY;
	}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(QasmLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "Qasm.g4"; }

	@Override
	public get ruleNames(): string[] { return QasmLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return QasmLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return QasmLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02#\xE5\b\x01\x04"+
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04"+
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r"+
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12"+
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17"+
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C"+
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x03"+
		"\x02\x03\x02\x03\x02\x03\x02\x07\x02J\n\x02\f\x02\x0E\x02M\v\x02\x03\x02"+
		"\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x06\x04V\n\x04\r\x04"+
		"\x0E\x04W\x03\x04\x03\x04\x06\x04\\\n\x04\r\x04\x0E\x04]\x03\x05\x06\x05"+
		"a\n\x05\r\x05\x0E\x05b\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06"+
		"\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06"+
		"\x05\x06t\n\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07"+
		"\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03"+
		"\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03"+
		"\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03"+
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03"+
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03"+
		"\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03"+
		"\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03"+
		"\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03"+
		"\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03"+
		"\x1F\x03\x1F\x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03\"\x03\"\x07\""+
		"\xE1\n\"\f\"\x0E\"\xE4\v\"\x02\x02\x02#\x03\x02\x03\x05\x02\x04\x07\x02"+
		"\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02"+
		"\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12"+
		"#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02"+
		"\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C"+
		"\x02#\x03\x02\x07\x04\x02\f\f\x0F\x0F\x05\x02\v\f\x0F\x0F\"\"\x03\x02"+
		"2;\x03\x02c|\x05\x022;C\\c|\xEA\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02"+
		"\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02"+
		"\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02"+
		"\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02"+
		"\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02"+
		"\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02"+
		"\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+"+
		"\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02"+
		"\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02"+
		"\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03"+
		"\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x03E\x03\x02\x02"+
		"\x02\x05P\x03\x02\x02\x02\x07U\x03\x02\x02\x02\t`\x03\x02\x02\x02\vs\x03"+
		"\x02\x02\x02\ru\x03\x02\x02\x02\x0F}\x03\x02\x02\x02\x11\x87\x03\x02\x02"+
		"\x02\x13\x8C\x03\x02\x02\x02\x15\x91\x03\x02\x02\x02\x17\x97\x03\x02\x02"+
		"\x02\x19\x99\x03\x02\x02\x02\x1B\x9C\x03\x02\x02\x02\x1D\xA4\x03\x02\x02"+
		"\x02\x1F\xAC\x03\x02\x02\x02!\xB2\x03\x02\x02\x02#\xB9\x03\x02\x02\x02"+
		"%\xBC\x03\x02\x02\x02\'\xBE\x03\x02\x02\x02)\xC0\x03\x02\x02\x02+\xC2"+
		"\x03\x02\x02\x02-\xC4\x03\x02\x02\x02/\xC6\x03\x02\x02\x021\xC8\x03\x02"+
		"\x02\x023\xCA\x03\x02\x02\x025\xCC\x03\x02\x02\x027\xCE\x03\x02\x02\x02"+
		"9\xD0\x03\x02\x02\x02;\xD2\x03\x02\x02\x02=\xD4\x03\x02\x02\x02?\xD6\x03"+
		"\x02\x02\x02A\xD9\x03\x02\x02\x02C\xDE\x03\x02\x02\x02EF\x071\x02\x02"+
		"FG\x071\x02\x02GK\x03\x02\x02\x02HJ\n\x02\x02\x02IH\x03\x02\x02\x02JM"+
		"\x03\x02\x02\x02KI\x03\x02\x02\x02KL\x03\x02\x02\x02LN\x03\x02\x02\x02"+
		"MK\x03\x02\x02\x02NO\b\x02\x02\x02O\x04\x03\x02\x02\x02PQ\t\x03\x02\x02"+
		"QR\x03\x02\x02\x02RS\b\x03\x02\x02S\x06\x03\x02\x02\x02TV\t\x04\x02\x02"+
		"UT\x03\x02\x02\x02VW\x03\x02\x02\x02WU\x03\x02\x02\x02WX\x03\x02\x02\x02"+
		"XY\x03\x02\x02\x02Y[\x070\x02\x02Z\\\t\x04\x02\x02[Z\x03\x02\x02\x02\\"+
		"]\x03\x02\x02\x02][\x03\x02\x02\x02]^\x03\x02\x02\x02^\b\x03\x02\x02\x02"+
		"_a\t\x04\x02\x02`_\x03\x02\x02\x02ab\x03\x02\x02\x02b`\x03\x02\x02\x02"+
		"bc\x03\x02\x02\x02c\n\x03\x02\x02\x02de\x07Q\x02\x02ef\x07R\x02\x02fg"+
		"\x07G\x02\x02gh\x07P\x02\x02hi\x07S\x02\x02ij\x07C\x02\x02jk\x07U\x02"+
		"\x02kt\x07O\x02\x02lm\x07K\x02\x02mn\x07D\x02\x02no\x07O\x02\x02op\x07"+
		"S\x02\x02pq\x07C\x02\x02qr\x07U\x02\x02rt\x07O\x02\x02sd\x03\x02\x02\x02"+
		"sl\x03\x02\x02\x02t\f\x03\x02\x02\x02uv\x07k\x02\x02vw\x07p\x02\x02wx"+
		"\x07e\x02\x02xy\x07n\x02\x02yz\x07w\x02\x02z{\x07f\x02\x02{|\x07g\x02"+
		"\x02|\x0E\x03\x02\x02\x02}~\x07S\x02\x02~\x7F\x07G\x02\x02\x7F\x80\x07"+
		"N\x02\x02\x80\x81\x07K\x02\x02\x81\x82\x07D\x02\x02\x82\x83\x070\x02\x02"+
		"\x83\x84\x07K\x02\x02\x84\x85\x07P\x02\x02\x85\x86\x07E\x02\x02\x86\x10"+
		"\x03\x02\x02\x02\x87\x88\x07s\x02\x02\x88\x89\x07t\x02\x02\x89\x8A\x07"+
		"g\x02\x02\x8A\x8B\x07i\x02\x02\x8B\x12\x03\x02\x02\x02\x8C\x8D\x07e\x02"+
		"\x02\x8D\x8E\x07t\x02\x02\x8E\x8F\x07g\x02\x02\x8F\x90\x07i\x02\x02\x90"+
		"\x14\x03\x02\x02\x02\x91\x92\x07e\x02\x02\x92\x93\x07n\x02\x02\x93\x94"+
		"\x07g\x02\x02\x94\x95\x07c\x02\x02\x95\x96\x07p\x02\x02\x96\x16\x03\x02"+
		"\x02\x02\x97\x98\x07W\x02\x02\x98\x18\x03\x02\x02\x02\x99\x9A\x07E\x02"+
		"\x02\x9A\x9B\x07Z\x02\x02\x9B\x1A\x03\x02\x02\x02\x9C\x9D\x07o\x02\x02"+
		"\x9D\x9E\x07g\x02\x02\x9E\x9F\x07c\x02\x02\x9F\xA0\x07u\x02\x02\xA0\xA1"+
		"\x07w\x02\x02\xA1\xA2\x07t\x02\x02\xA2\xA3\x07g\x02\x02\xA3\x1C\x03\x02"+
		"\x02\x02\xA4\xA5\x07d\x02\x02\xA5\xA6\x07c\x02\x02\xA6\xA7\x07t\x02\x02"+
		"\xA7\xA8\x07t\x02\x02\xA8\xA9\x07k\x02\x02\xA9\xAA\x07g\x02\x02\xAA\xAB"+
		"\x07t\x02\x02\xAB\x1E\x03\x02\x02\x02\xAC\xAD\x07t\x02\x02\xAD\xAE\x07"+
		"g\x02\x02\xAE\xAF\x07u\x02\x02\xAF\xB0\x07g\x02\x02\xB0\xB1\x07v\x02\x02"+
		"\xB1 \x03\x02\x02\x02\xB2\xB3\x07q\x02\x02\xB3\xB4\x07r\x02\x02\xB4\xB5"+
		"\x07c\x02\x02\xB5\xB6\x07s\x02\x02\xB6\xB7\x07w\x02\x02\xB7\xB8\x07g\x02"+
		"\x02\xB8\"\x03\x02\x02\x02\xB9\xBA\x07/\x02\x02\xBA\xBB\x07@\x02\x02\xBB"+
		"$\x03\x02\x02\x02\xBC\xBD\x07=\x02\x02\xBD&\x03\x02\x02\x02\xBE\xBF\x07"+
		".\x02\x02\xBF(\x03\x02\x02\x02\xC0\xC1\x07}\x02\x02\xC1*\x03\x02\x02\x02"+
		"\xC2\xC3\x07\x7F\x02\x02\xC3,\x03\x02\x02\x02\xC4\xC5\x07]\x02\x02\xC5"+
		".\x03\x02\x02\x02\xC6\xC7\x07_\x02\x02\xC70\x03\x02\x02\x02\xC8\xC9\x07"+
		"*\x02\x02\xC92\x03\x02\x02\x02\xCA\xCB\x07+\x02\x02\xCB4\x03\x02\x02\x02"+
		"\xCC\xCD\x07`\x02\x02\xCD6\x03\x02\x02\x02\xCE\xCF\x07,\x02\x02\xCF8\x03"+
		"\x02\x02\x02\xD0\xD1\x071\x02\x02\xD1:\x03\x02\x02\x02\xD2\xD3\x07-\x02"+
		"\x02\xD3<\x03\x02\x02\x02\xD4\xD5\x07/\x02\x02\xD5>\x03\x02\x02\x02\xD6"+
		"\xD7\x07r\x02\x02\xD7\xD8\x07k\x02\x02\xD8@\x03\x02\x02\x02\xD9\xDA\x07"+
		"i\x02\x02\xDA\xDB\x07c\x02\x02\xDB\xDC\x07v\x02\x02\xDC\xDD\x07g\x02\x02"+
		"\xDDB\x03\x02\x02\x02\xDE\xE2\t\x05\x02\x02\xDF\xE1\t\x06\x02\x02\xE0"+
		"\xDF\x03\x02\x02\x02\xE1\xE4\x03\x02\x02\x02\xE2\xE0\x03\x02\x02\x02\xE2"+
		"\xE3\x03\x02\x02\x02\xE3D\x03\x02\x02\x02\xE4\xE2\x03\x02\x02\x02\t\x02"+
		"KW]bs\xE2\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!QasmLexer.__ATN) {
			QasmLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(QasmLexer._serializedATN));
		}

		return QasmLexer.__ATN;
	}

}

