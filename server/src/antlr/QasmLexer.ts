// Generated from src/antlr/Qasm.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class QasmLexer extends Lexer {
	public static readonly T__0=1;
	public static readonly T__1=2;
	public static readonly T__2=3;
	public static readonly T__3=4;
	public static readonly Comment=5;
	public static readonly WhiteSpace=6;
	public static readonly Real=7;
	public static readonly Int=8;
	public static readonly IbmQasm=9;
	public static readonly Include=10;
	public static readonly Qelib=11;
	public static readonly Qreg=12;
	public static readonly Creg=13;
	public static readonly U=14;
	public static readonly Cx=15;
	public static readonly Measure=16;
	public static readonly Barrier=17;
	public static readonly Reset=18;
	public static readonly Opaque=19;
	public static readonly Assign=20;
	public static readonly Semi=21;
	public static readonly Comma=22;
	public static readonly LeftBrac=23;
	public static readonly RightBrac=24;
	public static readonly LeftParen=25;
	public static readonly RightParen=26;
	public static readonly Gate=27;
	public static readonly GateId=28;
	public static readonly Id=29;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "Comment", "WhiteSpace", "Real", "Int", 
		"IbmQasm", "Include", "Qelib", "Qreg", "Creg", "U", "Cx", "Measure", "Barrier", 
		"Reset", "Opaque", "Assign", "Semi", "Comma", "LeftBrac", "RightBrac", 
		"LeftParen", "RightParen", "Gate", "GateId", "Id"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, "'qoperation'", "'gateScope'", "'bitList'", "'gateBody'", undefined, 
		undefined, undefined, undefined, undefined, "'include'", "'QELIB.INC'", 
		"'qreg'", "'creg'", "'U'", "'CX'", "'measure'", "'barrier'", "'reset'", 
		"'opaque'", "'->'", "';'", "','", "'['", "']'", "'('", "')'", "'gate'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, undefined, undefined, "Comment", "WhiteSpace", 
		"Real", "Int", "IbmQasm", "Include", "Qelib", "Qreg", "Creg", "U", "Cx", 
		"Measure", "Barrier", "Reset", "Opaque", "Assign", "Semi", "Comma", "LeftBrac", 
		"RightBrac", "LeftParen", "RightParen", "Gate", "GateId", "Id"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(QasmLexer._LITERAL_NAMES, QasmLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return QasmLexer.VOCABULARY;
	}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(QasmLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "Qasm.g4"; }

	@Override
	public get ruleNames(): string[] { return QasmLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return QasmLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return QasmLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\x1F\xF4\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02"+
		"\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03"+
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04"+
		"\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05"+
		"\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06"+
		"\x03\x06\x07\x06h\n\x06\f\x06\x0E\x06k\v\x06\x03\x06\x03\x06\x03\x07\x03"+
		"\x07\x03\x07\x03\x07\x03\b\x06\bt\n\b\r\b\x0E\bu\x03\b\x03\b\x06\bz\n"+
		"\b\r\b\x0E\b{\x03\t\x06\t\x7F\n\t\r\t\x0E\t\x80\x03\n\x03\n\x03\n\x03"+
		"\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x05"+
		"\n\x92\n\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f"+
		"\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03"+
		"\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10"+
		"\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11"+
		"\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12"+
		"\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14"+
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16"+
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B"+
		"\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D"+
		"\x03\x1D\x03\x1D\x03\x1D\x05\x1D\xEC\n\x1D\x03\x1E\x03\x1E\x07\x1E\xF0"+
		"\n\x1E\f\x1E\x0E\x1E\xF3\v\x1E\x02\x02\x02\x1F\x03\x02\x03\x05\x02\x04"+
		"\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v"+
		"\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!"+
		"\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x19"+
		"1\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F\x03\x02\x07\x04"+
		"\x02\f\f\x0F\x0F\x05\x02\v\f\x0F\x0F\"\"\x03\x022;\x03\x02c|\x05\x022"+
		";C\\c|\xFB\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03"+
		"\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02"+
		"\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02"+
		"\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02"+
		"\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02"+
		"\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02"+
		"\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-"+
		"\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02"+
		"\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02"+
		"\x02;\x03\x02\x02\x02\x03=\x03\x02\x02\x02\x05H\x03\x02\x02\x02\x07R\x03"+
		"\x02\x02\x02\tZ\x03\x02\x02\x02\vc\x03\x02\x02\x02\rn\x03\x02\x02\x02"+
		"\x0Fs\x03\x02\x02\x02\x11~\x03\x02\x02\x02\x13\x91\x03\x02\x02\x02\x15"+
		"\x93\x03\x02\x02\x02\x17\x9B\x03\x02\x02\x02\x19\xA5\x03\x02\x02\x02\x1B"+
		"\xAA\x03\x02\x02\x02\x1D\xAF\x03\x02\x02\x02\x1F\xB1\x03\x02\x02\x02!"+
		"\xB4\x03\x02\x02\x02#\xBC\x03\x02\x02\x02%\xC4\x03\x02\x02\x02\'\xCA\x03"+
		"\x02\x02\x02)\xD1\x03\x02\x02\x02+\xD4\x03\x02\x02\x02-\xD6\x03\x02\x02"+
		"\x02/\xD8\x03\x02\x02\x021\xDA\x03\x02\x02\x023\xDC\x03\x02\x02\x025\xDE"+
		"\x03\x02\x02\x027\xE0\x03\x02\x02\x029\xEB\x03\x02\x02\x02;\xED\x03\x02"+
		"\x02\x02=>\x07s\x02\x02>?\x07q\x02\x02?@\x07r\x02\x02@A\x07g\x02\x02A"+
		"B\x07t\x02\x02BC\x07c\x02\x02CD\x07v\x02\x02DE\x07k\x02\x02EF\x07q\x02"+
		"\x02FG\x07p\x02\x02G\x04\x03\x02\x02\x02HI\x07i\x02\x02IJ\x07c\x02\x02"+
		"JK\x07v\x02\x02KL\x07g\x02\x02LM\x07U\x02\x02MN\x07e\x02\x02NO\x07q\x02"+
		"\x02OP\x07r\x02\x02PQ\x07g\x02\x02Q\x06\x03\x02\x02\x02RS\x07d\x02\x02"+
		"ST\x07k\x02\x02TU\x07v\x02\x02UV\x07N\x02\x02VW\x07k\x02\x02WX\x07u\x02"+
		"\x02XY\x07v\x02\x02Y\b\x03\x02\x02\x02Z[\x07i\x02\x02[\\\x07c\x02\x02"+
		"\\]\x07v\x02\x02]^\x07g\x02\x02^_\x07D\x02\x02_`\x07q\x02\x02`a\x07f\x02"+
		"\x02ab\x07{\x02\x02b\n\x03\x02\x02\x02cd\x071\x02\x02de\x071\x02\x02e"+
		"i\x03\x02\x02\x02fh\n\x02\x02\x02gf\x03\x02\x02\x02hk\x03\x02\x02\x02"+
		"ig\x03\x02\x02\x02ij\x03\x02\x02\x02jl\x03\x02\x02\x02ki\x03\x02\x02\x02"+
		"lm\b\x06\x02\x02m\f\x03\x02\x02\x02no\t\x03\x02\x02op\x03\x02\x02\x02"+
		"pq\b\x07\x02\x02q\x0E\x03\x02\x02\x02rt\t\x04\x02\x02sr\x03\x02\x02\x02"+
		"tu\x03\x02\x02\x02us\x03\x02\x02\x02uv\x03\x02\x02\x02vw\x03\x02\x02\x02"+
		"wy\x070\x02\x02xz\t\x04\x02\x02yx\x03\x02\x02\x02z{\x03\x02\x02\x02{y"+
		"\x03\x02\x02\x02{|\x03\x02\x02\x02|\x10\x03\x02\x02\x02}\x7F\t\x04\x02"+
		"\x02~}\x03\x02\x02\x02\x7F\x80\x03\x02\x02\x02\x80~\x03\x02\x02\x02\x80"+
		"\x81\x03\x02\x02\x02\x81\x12\x03\x02\x02\x02\x82\x83\x07Q\x02\x02\x83"+
		"\x84\x07R\x02\x02\x84\x85\x07G\x02\x02\x85\x86\x07P\x02\x02\x86\x87\x07"+
		"S\x02\x02\x87\x88\x07C\x02\x02\x88\x89\x07U\x02\x02\x89\x92\x07O\x02\x02"+
		"\x8A\x8B\x07K\x02\x02\x8B\x8C\x07D\x02\x02\x8C\x8D\x07O\x02\x02\x8D\x8E"+
		"\x07S\x02\x02\x8E\x8F\x07C\x02\x02\x8F\x90\x07U\x02\x02\x90\x92\x07O\x02"+
		"\x02\x91\x82\x03\x02\x02\x02\x91\x8A\x03\x02\x02\x02\x92\x14\x03\x02\x02"+
		"\x02\x93\x94\x07k\x02\x02\x94\x95\x07p\x02\x02\x95\x96\x07e\x02\x02\x96"+
		"\x97\x07n\x02\x02\x97\x98\x07w\x02\x02\x98\x99\x07f\x02\x02\x99\x9A\x07"+
		"g\x02\x02\x9A\x16\x03\x02\x02\x02\x9B\x9C\x07S\x02\x02\x9C\x9D\x07G\x02"+
		"\x02\x9D\x9E\x07N\x02\x02\x9E\x9F\x07K\x02\x02\x9F\xA0\x07D\x02\x02\xA0"+
		"\xA1\x070\x02\x02\xA1\xA2\x07K\x02\x02\xA2\xA3\x07P\x02\x02\xA3\xA4\x07"+
		"E\x02\x02\xA4\x18\x03\x02\x02\x02\xA5\xA6\x07s\x02\x02\xA6\xA7\x07t\x02"+
		"\x02\xA7\xA8\x07g\x02\x02\xA8\xA9\x07i\x02\x02\xA9\x1A\x03\x02\x02\x02"+
		"\xAA\xAB\x07e\x02\x02\xAB\xAC\x07t\x02\x02\xAC\xAD\x07g\x02\x02\xAD\xAE"+
		"\x07i\x02\x02\xAE\x1C\x03\x02\x02\x02\xAF\xB0\x07W\x02\x02\xB0\x1E\x03"+
		"\x02\x02\x02\xB1\xB2\x07E\x02\x02\xB2\xB3\x07Z\x02\x02\xB3 \x03\x02\x02"+
		"\x02\xB4\xB5\x07o\x02\x02\xB5\xB6\x07g\x02\x02\xB6\xB7\x07c\x02\x02\xB7"+
		"\xB8\x07u\x02\x02\xB8\xB9\x07w\x02\x02\xB9\xBA\x07t\x02\x02\xBA\xBB\x07"+
		"g\x02\x02\xBB\"\x03\x02\x02\x02\xBC\xBD\x07d\x02\x02\xBD\xBE\x07c\x02"+
		"\x02\xBE\xBF\x07t\x02\x02\xBF\xC0\x07t\x02\x02\xC0\xC1\x07k\x02\x02\xC1"+
		"\xC2\x07g\x02\x02\xC2\xC3\x07t\x02\x02\xC3$\x03\x02\x02\x02\xC4\xC5\x07"+
		"t\x02\x02\xC5\xC6\x07g\x02\x02\xC6\xC7\x07u\x02\x02\xC7\xC8\x07g\x02\x02"+
		"\xC8\xC9\x07v\x02\x02\xC9&\x03\x02\x02\x02\xCA\xCB\x07q\x02\x02\xCB\xCC"+
		"\x07r\x02\x02\xCC\xCD\x07c\x02\x02\xCD\xCE\x07s\x02\x02\xCE\xCF\x07w\x02"+
		"\x02\xCF\xD0\x07g\x02\x02\xD0(\x03\x02\x02\x02\xD1\xD2\x07/\x02\x02\xD2"+
		"\xD3\x07@\x02\x02\xD3*\x03\x02\x02\x02\xD4\xD5\x07=\x02\x02\xD5,\x03\x02"+
		"\x02\x02\xD6\xD7\x07.\x02\x02\xD7.\x03\x02\x02\x02\xD8\xD9\x07]\x02\x02"+
		"\xD90\x03\x02\x02\x02\xDA\xDB\x07_\x02\x02\xDB2\x03\x02\x02\x02\xDC\xDD"+
		"\x07*\x02\x02\xDD4\x03\x02\x02\x02\xDE\xDF\x07+\x02\x02\xDF6\x03\x02\x02"+
		"\x02\xE0\xE1\x07i\x02\x02\xE1\xE2\x07c\x02\x02\xE2\xE3\x07v\x02\x02\xE3"+
		"\xE4\x07g\x02\x02\xE48\x03\x02\x02\x02\xE5\xE6\x07w\x02\x02\xE6\xEC\x07"+
		"3\x02\x02\xE7\xE8\x07w\x02\x02\xE8\xEC\x074\x02\x02\xE9\xEA\x07w\x02\x02"+
		"\xEA\xEC\x075\x02\x02\xEB\xE5\x03\x02\x02\x02\xEB\xE7\x03\x02\x02\x02"+
		"\xEB\xE9\x03\x02\x02\x02\xEC:\x03\x02\x02\x02\xED\xF1\t\x05\x02\x02\xEE"+
		"\xF0\t\x06\x02\x02\xEF\xEE\x03\x02\x02\x02\xF0\xF3\x03\x02\x02\x02\xF1"+
		"\xEF\x03\x02\x02\x02\xF1\xF2\x03\x02\x02\x02\xF2<\x03\x02\x02\x02\xF3"+
		"\xF1\x03\x02\x02\x02\n\x02iu{\x80\x91\xEB\xF1\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!QasmLexer.__ATN) {
			QasmLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(QasmLexer._serializedATN));
		}

		return QasmLexer.__ATN;
	}

}

