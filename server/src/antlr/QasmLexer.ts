// Generated from src/antlr/Qasm.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from 'antlr4ts/atn/ATN';
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer';
import { CharStream } from 'antlr4ts/CharStream';
import { Lexer } from 'antlr4ts/Lexer';
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator';
import { NotNull } from 'antlr4ts/Decorators';
import { Override } from 'antlr4ts/Decorators';
import { RuleContext } from 'antlr4ts/RuleContext';
import { Vocabulary } from 'antlr4ts/Vocabulary';
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl';

import * as Utils from 'antlr4ts/misc/Utils';


export class QasmLexer extends Lexer {
	public static readonly T__0=1;
	public static readonly T__1=2;
	public static readonly Comment=3;
	public static readonly WhiteSpace=4;
	public static readonly Real=5;
	public static readonly Int=6;
	public static readonly IbmQasm=7;
	public static readonly Include=8;
	public static readonly Qelib=9;
	public static readonly Qreg=10;
	public static readonly Creg=11;
	public static readonly U=12;
	public static readonly Cx=13;
	public static readonly Measure=14;
	public static readonly Barrier=15;
	public static readonly Reset=16;
	public static readonly Opaque=17;
	public static readonly Assign=18;
	public static readonly Semi=19;
	public static readonly Comma=20;
	public static readonly LeftCurlyBrace=21;
	public static readonly RightCurlyBrace=22;
	public static readonly LeftBrace=23;
	public static readonly RightBrace=24;
	public static readonly LeftParen=25;
	public static readonly RightParen=26;
	public static readonly Gate=27;
	public static readonly GateId=28;
	public static readonly Id=29;
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE"
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "Comment", "WhiteSpace", "Real", "Int", "IbmQasm", "Include", 
		"Qelib", "Qreg", "Creg", "U", "Cx", "Measure", "Barrier", "Reset", "Opaque", 
		"Assign", "Semi", "Comma", "LeftCurlyBrace", "RightCurlyBrace", "LeftBrace", 
		"RightBrace", "LeftParen", "RightParen", "Gate", "GateId", "Id"
	];

	private static readonly _LITERAL_NAMES: (string | undefined)[] = [
		undefined, "'qoperation'", "'expression'", undefined, undefined, undefined, 
		undefined, undefined, "'include'", "'QELIB.INC'", "'qreg'", "'creg'", 
		"'U'", "'CX'", "'measure'", "'barrier'", "'reset'", "'opaque'", "'->'", 
		"';'", "','", "'{'", "'}'", "'['", "']'", "'('", "')'", "'gate'"
	];
	private static readonly _SYMBOLIC_NAMES: (string | undefined)[] = [
		undefined, undefined, undefined, "Comment", "WhiteSpace", "Real", "Int", 
		"IbmQasm", "Include", "Qelib", "Qreg", "Creg", "U", "Cx", "Measure", "Barrier", 
		"Reset", "Opaque", "Assign", "Semi", "Comma", "LeftCurlyBrace", "RightCurlyBrace", 
		"LeftBrace", "RightBrace", "LeftParen", "RightParen", "Gate", "GateId", 
		"Id"
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(QasmLexer._LITERAL_NAMES, QasmLexer._SYMBOLIC_NAMES, []);

	@Override
	@NotNull
	public get vocabulary(): Vocabulary {
		return QasmLexer.VOCABULARY;
	}


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(QasmLexer._ATN, this);
	}

	@Override
	public get grammarFileName(): string { return "Qasm.g4"; }

	@Override
	public get ruleNames(): string[] { return QasmLexer.ruleNames; }

	@Override
	public get serializedATN(): string { return QasmLexer._serializedATN; }

	@Override
	public get modeNames(): string[] { return QasmLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\x1F\xE8\b\x01"+
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06"+
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r"+
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t"+
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t"+
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t"+
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02"+
		"\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03"+
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04"+
		"\x03\x04\x03\x04\x03\x04\x07\x04X\n\x04\f\x04\x0E\x04[\v\x04\x03\x04\x03"+
		"\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x06\x06d\n\x06\r\x06\x0E"+
		"\x06e\x03\x06\x03\x06\x06\x06j\n\x06\r\x06\x0E\x06k\x03\x07\x06\x07o\n"+
		"\x07\r\x07\x0E\x07p\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03"+
		"\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x05\b\x82\n\b\x03\t\x03\t\x03\t"+
		"\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03"+
		"\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03"+
		"\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03"+
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03"+
		"\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03"+
		"\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03"+
		"\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03"+
		"\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03"+
		"\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03"+
		"\x1D\x03\x1D\x05\x1D\xE0\n\x1D\x03\x1E\x03\x1E\x07\x1E\xE4\n\x1E\f\x1E"+
		"\x0E\x1E\xE7\v\x1E\x02\x02\x02\x1F\x03\x02\x03\x05\x02\x04\x07\x02\x05"+
		"\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17"+
		"\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13"+
		"%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02"+
		"\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F\x03\x02\x07\x04\x02\f\f\x0F\x0F"+
		"\x05\x02\v\f\x0F\x0F\"\"\x03\x022;\x03\x02c|\x05\x022;C\\c|\xEF\x02\x03"+
		"\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t"+
		"\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03"+
		"\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03"+
		"\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03"+
		"\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03"+
		"\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02"+
		"\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02"+
		"/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02"+
		"\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02"+
		"\x03=\x03\x02\x02\x02\x05H\x03\x02\x02\x02\x07S\x03\x02\x02\x02\t^\x03"+
		"\x02\x02\x02\vc\x03\x02\x02\x02\rn\x03\x02\x02\x02\x0F\x81\x03\x02\x02"+
		"\x02\x11\x83\x03\x02\x02\x02\x13\x8B\x03\x02\x02\x02\x15\x95\x03\x02\x02"+
		"\x02\x17\x9A\x03\x02\x02\x02\x19\x9F\x03\x02\x02\x02\x1B\xA1\x03\x02\x02"+
		"\x02\x1D\xA4\x03\x02\x02\x02\x1F\xAC\x03\x02\x02\x02!\xB4\x03\x02\x02"+
		"\x02#\xBA\x03\x02\x02\x02%\xC1\x03\x02\x02\x02\'\xC4\x03\x02\x02\x02)"+
		"\xC6\x03\x02\x02\x02+\xC8\x03\x02\x02\x02-\xCA\x03\x02\x02\x02/\xCC\x03"+
		"\x02\x02\x021\xCE\x03\x02\x02\x023\xD0\x03\x02\x02\x025\xD2\x03\x02\x02"+
		"\x027\xD4\x03\x02\x02\x029\xDF\x03\x02\x02\x02;\xE1\x03\x02\x02\x02=>"+
		"\x07s\x02\x02>?\x07q\x02\x02?@\x07r\x02\x02@A\x07g\x02\x02AB\x07t\x02"+
		"\x02BC\x07c\x02\x02CD\x07v\x02\x02DE\x07k\x02\x02EF\x07q\x02\x02FG\x07"+
		"p\x02\x02G\x04\x03\x02\x02\x02HI\x07g\x02\x02IJ\x07z\x02\x02JK\x07r\x02"+
		"\x02KL\x07t\x02\x02LM\x07g\x02\x02MN\x07u\x02\x02NO\x07u\x02\x02OP\x07"+
		"k\x02\x02PQ\x07q\x02\x02QR\x07p\x02\x02R\x06\x03\x02\x02\x02ST\x071\x02"+
		"\x02TU\x071\x02\x02UY\x03\x02\x02\x02VX\n\x02\x02\x02WV\x03\x02\x02\x02"+
		"X[\x03\x02\x02\x02YW\x03\x02\x02\x02YZ\x03\x02\x02\x02Z\\\x03\x02\x02"+
		"\x02[Y\x03\x02\x02\x02\\]\b\x04\x02\x02]\b\x03\x02\x02\x02^_\t\x03\x02"+
		"\x02_`\x03\x02\x02\x02`a\b\x05\x02\x02a\n\x03\x02\x02\x02bd\t\x04\x02"+
		"\x02cb\x03\x02\x02\x02de\x03\x02\x02\x02ec\x03\x02\x02\x02ef\x03\x02\x02"+
		"\x02fg\x03\x02\x02\x02gi\x070\x02\x02hj\t\x04\x02\x02ih\x03\x02\x02\x02"+
		"jk\x03\x02\x02\x02ki\x03\x02\x02\x02kl\x03\x02\x02\x02l\f\x03\x02\x02"+
		"\x02mo\t\x04\x02\x02nm\x03\x02\x02\x02op\x03\x02\x02\x02pn\x03\x02\x02"+
		"\x02pq\x03\x02\x02\x02q\x0E\x03\x02\x02\x02rs\x07Q\x02\x02st\x07R\x02"+
		"\x02tu\x07G\x02\x02uv\x07P\x02\x02vw\x07S\x02\x02wx\x07C\x02\x02xy\x07"+
		"U\x02\x02y\x82\x07O\x02\x02z{\x07K\x02\x02{|\x07D\x02\x02|}\x07O\x02\x02"+
		"}~\x07S\x02\x02~\x7F\x07C\x02\x02\x7F\x80\x07U\x02\x02\x80\x82\x07O\x02"+
		"\x02\x81r\x03\x02\x02\x02\x81z\x03\x02\x02\x02\x82\x10\x03\x02\x02\x02"+
		"\x83\x84\x07k\x02\x02\x84\x85\x07p\x02\x02\x85\x86\x07e\x02\x02\x86\x87"+
		"\x07n\x02\x02\x87\x88\x07w\x02\x02\x88\x89\x07f\x02\x02\x89\x8A\x07g\x02"+
		"\x02\x8A\x12\x03\x02\x02\x02\x8B\x8C\x07S\x02\x02\x8C\x8D\x07G\x02\x02"+
		"\x8D\x8E\x07N\x02\x02\x8E\x8F\x07K\x02\x02\x8F\x90\x07D\x02\x02\x90\x91"+
		"\x070\x02\x02\x91\x92\x07K\x02\x02\x92\x93\x07P\x02\x02\x93\x94\x07E\x02"+
		"\x02\x94\x14\x03\x02\x02\x02\x95\x96\x07s\x02\x02\x96\x97\x07t\x02\x02"+
		"\x97\x98\x07g\x02\x02\x98\x99\x07i\x02\x02\x99\x16\x03\x02\x02\x02\x9A"+
		"\x9B\x07e\x02\x02\x9B\x9C\x07t\x02\x02\x9C\x9D\x07g\x02\x02\x9D\x9E\x07"+
		"i\x02\x02\x9E\x18\x03\x02\x02\x02\x9F\xA0\x07W\x02\x02\xA0\x1A\x03\x02"+
		"\x02\x02\xA1\xA2\x07E\x02\x02\xA2\xA3\x07Z\x02\x02\xA3\x1C\x03\x02\x02"+
		"\x02\xA4\xA5\x07o\x02\x02\xA5\xA6\x07g\x02\x02\xA6\xA7\x07c\x02\x02\xA7"+
		"\xA8\x07u\x02\x02\xA8\xA9\x07w\x02\x02\xA9\xAA\x07t\x02\x02\xAA\xAB\x07"+
		"g\x02\x02\xAB\x1E\x03\x02\x02\x02\xAC\xAD\x07d\x02\x02\xAD\xAE\x07c\x02"+
		"\x02\xAE\xAF\x07t\x02\x02\xAF\xB0\x07t\x02\x02\xB0\xB1\x07k\x02\x02\xB1"+
		"\xB2\x07g\x02\x02\xB2\xB3\x07t\x02\x02\xB3 \x03\x02\x02\x02\xB4\xB5\x07"+
		"t\x02\x02\xB5\xB6\x07g\x02\x02\xB6\xB7\x07u\x02\x02\xB7\xB8\x07g\x02\x02"+
		"\xB8\xB9\x07v\x02\x02\xB9\"\x03\x02\x02\x02\xBA\xBB\x07q\x02\x02\xBB\xBC"+
		"\x07r\x02\x02\xBC\xBD\x07c\x02\x02\xBD\xBE\x07s\x02\x02\xBE\xBF\x07w\x02"+
		"\x02\xBF\xC0\x07g\x02\x02\xC0$\x03\x02\x02\x02\xC1\xC2\x07/\x02\x02\xC2"+
		"\xC3\x07@\x02\x02\xC3&\x03\x02\x02\x02\xC4\xC5\x07=\x02\x02\xC5(\x03\x02"+
		"\x02\x02\xC6\xC7\x07.\x02\x02\xC7*\x03\x02\x02\x02\xC8\xC9\x07}\x02\x02"+
		"\xC9,\x03\x02\x02\x02\xCA\xCB\x07\x7F\x02\x02\xCB.\x03\x02\x02\x02\xCC"+
		"\xCD\x07]\x02\x02\xCD0\x03\x02\x02\x02\xCE\xCF\x07_\x02\x02\xCF2\x03\x02"+
		"\x02\x02\xD0\xD1\x07*\x02\x02\xD14\x03\x02\x02\x02\xD2\xD3\x07+\x02\x02"+
		"\xD36\x03\x02\x02\x02\xD4\xD5\x07i\x02\x02\xD5\xD6\x07c\x02\x02\xD6\xD7"+
		"\x07v\x02\x02\xD7\xD8\x07g\x02\x02\xD88\x03\x02\x02\x02\xD9\xDA\x07w\x02"+
		"\x02\xDA\xE0\x073\x02\x02\xDB\xDC\x07w\x02\x02\xDC\xE0\x074\x02\x02\xDD"+
		"\xDE\x07w\x02\x02\xDE\xE0\x075\x02\x02\xDF\xD9\x03\x02\x02\x02\xDF\xDB"+
		"\x03\x02\x02\x02\xDF\xDD\x03\x02\x02\x02\xE0:\x03\x02\x02\x02\xE1\xE5"+
		"\t\x05\x02\x02\xE2\xE4\t\x06\x02\x02\xE3\xE2\x03\x02\x02\x02\xE4\xE7\x03"+
		"\x02\x02\x02\xE5\xE3\x03\x02\x02\x02\xE5\xE6\x03\x02\x02\x02\xE6<\x03"+
		"\x02\x02\x02\xE7\xE5\x03\x02\x02\x02\n\x02Yekp\x81\xDF\xE5\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!QasmLexer.__ATN) {
			QasmLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(QasmLexer._serializedATN));
		}

		return QasmLexer.__ATN;
	}

}

