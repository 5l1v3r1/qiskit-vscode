"use strict";
// Generated from src/antlr/Qasm.g4 by ANTLR 4.6-SNAPSHOT
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
const ATNDeserializer_1 = require("antlr4ts/atn/ATNDeserializer");
const Lexer_1 = require("antlr4ts/Lexer");
const LexerATNSimulator_1 = require("antlr4ts/atn/LexerATNSimulator");
const Decorators_1 = require("antlr4ts/Decorators");
const Decorators_2 = require("antlr4ts/Decorators");
const VocabularyImpl_1 = require("antlr4ts/VocabularyImpl");
const Utils = require("antlr4ts/misc/Utils");
class QasmLexer extends Lexer_1.Lexer {
    constructor(input) {
        super(input);
        this._interp = new LexerATNSimulator_1.LexerATNSimulator(QasmLexer._ATN, this);
    }
    get vocabulary() {
        return QasmLexer.VOCABULARY;
    }
    get grammarFileName() { return "Qasm.g4"; }
    get ruleNames() { return QasmLexer.ruleNames; }
    get serializedATN() { return QasmLexer._serializedATN; }
    get modeNames() { return QasmLexer.modeNames; }
    static get _ATN() {
        if (!QasmLexer.__ATN) {
            QasmLexer.__ATN = new ATNDeserializer_1.ATNDeserializer().deserialize(Utils.toCharArray(QasmLexer._serializedATN));
        }
        return QasmLexer.__ATN;
    }
}
QasmLexer.Comment = 1;
QasmLexer.WhiteSpace = 2;
QasmLexer.Real = 3;
QasmLexer.Int = 4;
QasmLexer.IbmQasm = 5;
QasmLexer.Include = 6;
QasmLexer.Qelib = 7;
QasmLexer.Qreg = 8;
QasmLexer.Creg = 9;
QasmLexer.U = 10;
QasmLexer.Cx = 11;
QasmLexer.Measure = 12;
QasmLexer.Barrier = 13;
QasmLexer.Reset = 14;
QasmLexer.Opaque = 15;
QasmLexer.Assign = 16;
QasmLexer.Semi = 17;
QasmLexer.Comma = 18;
QasmLexer.LeftCurlyBrace = 19;
QasmLexer.RightCurlyBrace = 20;
QasmLexer.LeftBrace = 21;
QasmLexer.RightBrace = 22;
QasmLexer.LeftParen = 23;
QasmLexer.RightParen = 24;
QasmLexer.Pow = 25;
QasmLexer.Mult = 26;
QasmLexer.Div = 27;
QasmLexer.Sum = 28;
QasmLexer.Subs = 29;
QasmLexer.Pi = 30;
QasmLexer.Gate = 31;
QasmLexer.Id = 32;
QasmLexer.modeNames = [
    "DEFAULT_MODE"
];
QasmLexer.ruleNames = [
    "Comment", "WhiteSpace", "Real", "Int", "IbmQasm", "Include", "Qelib",
    "Qreg", "Creg", "U", "Cx", "Measure", "Barrier", "Reset", "Opaque", "Assign",
    "Semi", "Comma", "LeftCurlyBrace", "RightCurlyBrace", "LeftBrace", "RightBrace",
    "LeftParen", "RightParen", "Pow", "Mult", "Div", "Sum", "Subs", "Pi",
    "Gate", "Id"
];
QasmLexer._LITERAL_NAMES = [
    undefined, undefined, undefined, undefined, undefined, undefined, "'include'",
    "'QELIB.INC'", "'qreg'", "'creg'", "'U'", "'CX'", "'measure'", "'barrier'",
    "'reset'", "'opaque'", "'->'", "';'", "','", "'{'", "'}'", "'['", "']'",
    "'('", "')'", "'^'", "'*'", "'/'", "'+'", "'-'", "'pi'", "'gate'"
];
QasmLexer._SYMBOLIC_NAMES = [
    undefined, "Comment", "WhiteSpace", "Real", "Int", "IbmQasm", "Include",
    "Qelib", "Qreg", "Creg", "U", "Cx", "Measure", "Barrier", "Reset", "Opaque",
    "Assign", "Semi", "Comma", "LeftCurlyBrace", "RightCurlyBrace", "LeftBrace",
    "RightBrace", "LeftParen", "RightParen", "Pow", "Mult", "Div", "Sum",
    "Subs", "Pi", "Gate", "Id"
];
QasmLexer.VOCABULARY = new VocabularyImpl_1.VocabularyImpl(QasmLexer._LITERAL_NAMES, QasmLexer._SYMBOLIC_NAMES, []);
QasmLexer._serializedATN = "\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02\"\xDD\b\x01\x04" +
    "\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
    "\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
    "\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
    "\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
    "\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
    "\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x03\x02\x03" +
    "\x02\x03\x02\x03\x02\x07\x02H\n\x02\f\x02\x0E\x02K\v\x02\x03\x02\x03\x02" +
    "\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x06\x04T\n\x04\r\x04\x0E\x04" +
    "U\x03\x04\x03\x04\x06\x04Z\n\x04\r\x04\x0E\x04[\x03\x05\x06\x05_\n\x05" +
    "\r\x05\x0E\x05`\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06" +
    "\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x05\x06" +
    "r\n\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07" +
    "\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03" +
    "\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\f\x03" +
    "\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E" +
    "\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F" +
    "\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10" +
    "\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14" +
    "\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18" +
    "\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D" +
    "\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03" +
    " \x03!\x03!\x07!\xD9\n!\f!\x0E!\xDC\v!\x02\x02\x02\"\x03\x02\x03\x05\x02" +
    "\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02" +
    "\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11" +
    "!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02" +
    "\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02" +
    "!A\x02\"\x03\x02\x07\x04\x02\f\f\x0F\x0F\x05\x02\v\f\x0F\x0F\"\"\x03\x02" +
    "2;\x03\x02c|\x05\x022;C\\c|\xE2\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02" +
    "\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02" +
    "\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02" +
    "\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02" +
    "\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02" +
    "\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02" +
    "\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+" +
    "\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02" +
    "\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02" +
    "\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03" +
    "\x02\x02\x02\x02A\x03\x02\x02\x02\x03C\x03\x02\x02\x02\x05N\x03\x02\x02" +
    "\x02\x07S\x03\x02\x02\x02\t^\x03\x02\x02\x02\vq\x03\x02\x02\x02\rs\x03" +
    "\x02\x02\x02\x0F{\x03\x02\x02\x02\x11\x85\x03\x02\x02\x02\x13\x8A\x03" +
    "\x02\x02\x02\x15\x8F\x03\x02\x02\x02\x17\x91\x03\x02\x02\x02\x19\x94\x03" +
    "\x02\x02\x02\x1B\x9C\x03\x02\x02\x02\x1D\xA4\x03\x02\x02\x02\x1F\xAA\x03" +
    "\x02\x02\x02!\xB1\x03\x02\x02\x02#\xB4\x03\x02\x02\x02%\xB6\x03\x02\x02" +
    "\x02\'\xB8\x03\x02\x02\x02)\xBA\x03\x02\x02\x02+\xBC\x03\x02\x02\x02-" +
    "\xBE\x03\x02\x02\x02/\xC0\x03\x02\x02\x021\xC2\x03\x02\x02\x023\xC4\x03" +
    "\x02\x02\x025\xC6\x03\x02\x02\x027\xC8\x03\x02\x02\x029\xCA\x03\x02\x02" +
    "\x02;\xCC\x03\x02\x02\x02=\xCE\x03\x02\x02\x02?\xD1\x03\x02\x02\x02A\xD6" +
    "\x03\x02\x02\x02CD\x071\x02\x02DE\x071\x02\x02EI\x03\x02\x02\x02FH\n\x02" +
    "\x02\x02GF\x03\x02\x02\x02HK\x03\x02\x02\x02IG\x03\x02\x02\x02IJ\x03\x02" +
    "\x02\x02JL\x03\x02\x02\x02KI\x03\x02\x02\x02LM\b\x02\x02\x02M\x04\x03" +
    "\x02\x02\x02NO\t\x03\x02\x02OP\x03\x02\x02\x02PQ\b\x03\x02\x02Q\x06\x03" +
    "\x02\x02\x02RT\t\x04\x02\x02SR\x03\x02\x02\x02TU\x03\x02\x02\x02US\x03" +
    "\x02\x02\x02UV\x03\x02\x02\x02VW\x03\x02\x02\x02WY\x070\x02\x02XZ\t\x04" +
    "\x02\x02YX\x03\x02\x02\x02Z[\x03\x02\x02\x02[Y\x03\x02\x02\x02[\\\x03" +
    "\x02\x02\x02\\\b\x03\x02\x02\x02]_\t\x04\x02\x02^]\x03\x02\x02\x02_`\x03" +
    "\x02\x02\x02`^\x03\x02\x02\x02`a\x03\x02\x02\x02a\n\x03\x02\x02\x02bc" +
    "\x07Q\x02\x02cd\x07R\x02\x02de\x07G\x02\x02ef\x07P\x02\x02fg\x07S\x02" +
    "\x02gh\x07C\x02\x02hi\x07U\x02\x02ir\x07O\x02\x02jk\x07K\x02\x02kl\x07" +
    "D\x02\x02lm\x07O\x02\x02mn\x07S\x02\x02no\x07C\x02\x02op\x07U\x02\x02" +
    "pr\x07O\x02\x02qb\x03\x02\x02\x02qj\x03\x02\x02\x02r\f\x03\x02\x02\x02" +
    "st\x07k\x02\x02tu\x07p\x02\x02uv\x07e\x02\x02vw\x07n\x02\x02wx\x07w\x02" +
    "\x02xy\x07f\x02\x02yz\x07g\x02\x02z\x0E\x03\x02\x02\x02{|\x07S\x02\x02" +
    "|}\x07G\x02\x02}~\x07N\x02\x02~\x7F\x07K\x02\x02\x7F\x80\x07D\x02\x02" +
    "\x80\x81\x070\x02\x02\x81\x82\x07K\x02\x02\x82\x83\x07P\x02\x02\x83\x84" +
    "\x07E\x02\x02\x84\x10\x03\x02\x02\x02\x85\x86\x07s\x02\x02\x86\x87\x07" +
    "t\x02\x02\x87\x88\x07g\x02\x02\x88\x89\x07i\x02\x02\x89\x12\x03\x02\x02" +
    "\x02\x8A\x8B\x07e\x02\x02\x8B\x8C\x07t\x02\x02\x8C\x8D\x07g\x02\x02\x8D" +
    "\x8E\x07i\x02\x02\x8E\x14\x03\x02\x02\x02\x8F\x90\x07W\x02\x02\x90\x16" +
    "\x03\x02\x02\x02\x91\x92\x07E\x02\x02\x92\x93\x07Z\x02\x02\x93\x18\x03" +
    "\x02\x02\x02\x94\x95\x07o\x02\x02\x95\x96\x07g\x02\x02\x96\x97\x07c\x02" +
    "\x02\x97\x98\x07u\x02\x02\x98\x99\x07w\x02\x02\x99\x9A\x07t\x02\x02\x9A" +
    "\x9B\x07g\x02\x02\x9B\x1A\x03\x02\x02\x02\x9C\x9D\x07d\x02\x02\x9D\x9E" +
    "\x07c\x02\x02\x9E\x9F\x07t\x02\x02\x9F\xA0\x07t\x02\x02\xA0\xA1\x07k\x02" +
    "\x02\xA1\xA2\x07g\x02\x02\xA2\xA3\x07t\x02\x02\xA3\x1C\x03\x02\x02\x02" +
    "\xA4\xA5\x07t\x02\x02\xA5\xA6\x07g\x02\x02\xA6\xA7\x07u\x02\x02\xA7\xA8" +
    "\x07g\x02\x02\xA8\xA9\x07v\x02\x02\xA9\x1E\x03\x02\x02\x02\xAA\xAB\x07" +
    "q\x02\x02\xAB\xAC\x07r\x02\x02\xAC\xAD\x07c\x02\x02\xAD\xAE\x07s\x02\x02" +
    "\xAE\xAF\x07w\x02\x02\xAF\xB0\x07g\x02\x02\xB0 \x03\x02\x02\x02\xB1\xB2" +
    "\x07/\x02\x02\xB2\xB3\x07@\x02\x02\xB3\"\x03\x02\x02\x02\xB4\xB5\x07=" +
    "\x02\x02\xB5$\x03\x02\x02\x02\xB6\xB7\x07.\x02\x02\xB7&\x03\x02\x02\x02" +
    "\xB8\xB9\x07}\x02\x02\xB9(\x03\x02\x02\x02\xBA\xBB\x07\x7F\x02\x02\xBB" +
    "*\x03\x02\x02\x02\xBC\xBD\x07]\x02\x02\xBD,\x03\x02\x02\x02\xBE\xBF\x07" +
    "_\x02\x02\xBF.\x03\x02\x02\x02\xC0\xC1\x07*\x02\x02\xC10\x03\x02\x02\x02" +
    "\xC2\xC3\x07+\x02\x02\xC32\x03\x02\x02\x02\xC4\xC5\x07`\x02\x02\xC54\x03" +
    "\x02\x02\x02\xC6\xC7\x07,\x02\x02\xC76\x03\x02\x02\x02\xC8\xC9\x071\x02" +
    "\x02\xC98\x03\x02\x02\x02\xCA\xCB\x07-\x02\x02\xCB:\x03\x02\x02\x02\xCC" +
    "\xCD\x07/\x02\x02\xCD<\x03\x02\x02\x02\xCE\xCF\x07r\x02\x02\xCF\xD0\x07" +
    "k\x02\x02\xD0>\x03\x02\x02\x02\xD1\xD2\x07i\x02\x02\xD2\xD3\x07c\x02\x02" +
    "\xD3\xD4\x07v\x02\x02\xD4\xD5\x07g\x02\x02\xD5@\x03\x02\x02\x02\xD6\xDA" +
    "\t\x05\x02\x02\xD7\xD9\t\x06\x02\x02\xD8\xD7\x03\x02\x02\x02\xD9\xDC\x03" +
    "\x02\x02\x02\xDA\xD8\x03\x02\x02\x02\xDA\xDB\x03\x02\x02\x02\xDBB\x03" +
    "\x02\x02\x02\xDC\xDA\x03\x02\x02\x02\t\x02IU[`q\xDA\x03\b\x02\x02";
__decorate([
    Decorators_2.Override,
    Decorators_1.NotNull
], QasmLexer.prototype, "vocabulary", null);
__decorate([
    Decorators_2.Override
], QasmLexer.prototype, "grammarFileName", null);
__decorate([
    Decorators_2.Override
], QasmLexer.prototype, "ruleNames", null);
__decorate([
    Decorators_2.Override
], QasmLexer.prototype, "serializedATN", null);
__decorate([
    Decorators_2.Override
], QasmLexer.prototype, "modeNames", null);
exports.QasmLexer = QasmLexer;
